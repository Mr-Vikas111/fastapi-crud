# This workflow will install Python dependencies, run tests, and lint with SQLite for testing

name: FastAPI CRUD

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Run Tests with SQLite
      env:
        TESTING: "True"  # Enable testing mode for SQLite
      run: |
        pytest


## new

# name: FastAPI CRUD with PostgreSQL

# on:
#   push:
#     branches: [ "master" ]
#   pull_request:
#     branches: [ "master" ]

# permissions:
#   contents: read

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     services:
#       postgres:
#         image: postgres:14  # PostgreSQL version
#         env:
#           POSTGRES_USER: testfastdbuser
#           POSTGRES_PASSWORD: testfastdbuser1234
#           POSTGRES_DB: testfastdb
#         ports:
#           - 5432:5432
#         options: >-
#           --health-cmd "pg_isready -U testfastdbuser"
#           --health-interval 10s
#           --health-timeout 5s
#           --health-retries 5

#     steps:
#     - name: Checkout Repository
#       uses: actions/checkout@v4

#     - name: Set up Python 3.10
#       uses: actions/setup-python@v3
#       with:
#         python-version: "3.10"

#     - name: Install Dependencies
#       run: |
#         python -m pip install --upgrade pip
#         pip install pytest
#         if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

#     - name: Wait for PostgreSQL
#       run: |
#         echo "Waiting for PostgreSQL to be ready..."
#         until pg_isready -h 34.47.218.214 -p 5432 -U testfastdbuser; do
#           echo "PostgreSQL not ready yet, retrying..."
#           sleep 1
#         done
#         echo "PostgreSQL is ready!"

#     - name: Run Tests with PostgreSQL
#       env:
#         DATABASE_URL: postgresql://testfastdbuser:testfastdbuser1234@34.47.218.214:5432/$testfastdb
#       run: |
#         echo "Running tests using PostgreSQL..."
#         pytest


